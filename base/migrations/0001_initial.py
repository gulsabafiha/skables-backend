# Generated by Django 2.2.27 on 2022-03-08 08:48

import base.models
import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_name', models.CharField(blank=True, max_length=150, null=True)),
                ('artist_country', models.CharField(blank=True, max_length=150, null=True)),
                ('artist_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('artistry', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('education', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sculpture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('wall_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('introduction', models.TextField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, max_length=150, null=True)),
                ('shipping', models.CharField(blank=True, max_length=150, null=True)),
                ('like', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True)),
                ('is_popular', models.BooleanField(blank=True, default=False, null=True)),
                ('is_new', models.BooleanField(blank=True, default=False, null=True)),
                ('is_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_percentage', models.IntegerField(blank=True, null=True)),
                ('material', models.TextField(blank=True, max_length=150, null=True)),
                ('size', models.TextField(blank=True, max_length=150, null=True)),
                ('orientation', models.TextField(blank=True, max_length=150, null=True)),
                ('color', models.TextField(blank=True, max_length=150, null=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Artist')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Category')),
                ('medium', models.ManyToManyField(to='base.Medium')),
                ('style', models.ManyToManyField(to='base.Style')),
                ('subject', models.ManyToManyField(to='base.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Prints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('wall_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('introduction', models.TextField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, max_length=150, null=True)),
                ('shipping', models.CharField(blank=True, max_length=150, null=True)),
                ('like', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True)),
                ('is_popular', models.BooleanField(blank=True, default=False, null=True)),
                ('is_new', models.BooleanField(blank=True, default=False, null=True)),
                ('is_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_percentage', models.IntegerField(blank=True, null=True)),
                ('material', models.TextField(blank=True, max_length=150, null=True)),
                ('size', models.TextField(blank=True, max_length=150, null=True)),
                ('orientation', models.TextField(blank=True, max_length=150, null=True)),
                ('color', models.TextField(blank=True, max_length=150, null=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Artist')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Category')),
                ('medium', models.ManyToManyField(to='base.Medium')),
                ('style', models.ManyToManyField(to='base.Style')),
                ('subject', models.ManyToManyField(to='base.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Photography',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('wall_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('introduction', models.TextField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, max_length=150, null=True)),
                ('shipping', models.CharField(blank=True, max_length=150, null=True)),
                ('like', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True)),
                ('is_popular', models.BooleanField(blank=True, default=False, null=True)),
                ('is_new', models.BooleanField(blank=True, default=False, null=True)),
                ('is_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_percentage', models.IntegerField(blank=True, null=True)),
                ('material', models.TextField(blank=True, max_length=150, null=True)),
                ('size', models.TextField(blank=True, max_length=150, null=True)),
                ('orientation', models.TextField(blank=True, max_length=150, null=True)),
                ('color', models.TextField(blank=True, max_length=150, null=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Artist')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Category')),
                ('medium', models.ManyToManyField(to='base.Medium')),
                ('style', models.ManyToManyField(to='base.Style')),
                ('subject', models.ManyToManyField(to='base.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Painting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('wall_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('introduction', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('shipping', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('like', models.IntegerField(blank=True, default=0, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True)),
                ('is_popular', models.BooleanField(blank=True, default=False, null=True)),
                ('is_new', models.BooleanField(blank=True, default=False, null=True)),
                ('is_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_percentage', models.IntegerField(blank=True, null=True)),
                ('material', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('specification', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('size', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('orientation', models.CharField(blank=True, max_length=150, null=True)),
                ('color', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('created_year', models.PositiveIntegerField(default=2022, validators=[django.core.validators.MinValueValidator(1984), base.models.max_value_current_year])),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artist', to='base.Artist')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Category')),
                ('medium', models.ManyToManyField(blank=True, null=True, to='base.Medium')),
                ('rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Review')),
                ('style', models.ManyToManyField(blank=True, null=True, to='base.Style')),
                ('subject', models.ManyToManyField(blank=True, null=True, to='base.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Drawing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('wall_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('introduction', models.TextField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, max_length=150, null=True)),
                ('shipping', models.CharField(blank=True, max_length=150, null=True)),
                ('like', models.IntegerField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True)),
                ('is_popular', models.BooleanField(blank=True, default=False, null=True)),
                ('is_new', models.BooleanField(blank=True, default=False, null=True)),
                ('is_sale', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_percentage', models.IntegerField(blank=True, null=True)),
                ('material', models.TextField(blank=True, max_length=150, null=True)),
                ('size', models.TextField(blank=True, max_length=150, null=True)),
                ('orientation', models.TextField(blank=True, max_length=150, null=True)),
                ('color', models.TextField(blank=True, max_length=150, null=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Artist')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Category')),
                ('medium', models.ManyToManyField(to='base.Medium')),
                ('style', models.ManyToManyField(to='base.Style')),
                ('subject', models.ManyToManyField(to='base.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Customuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
